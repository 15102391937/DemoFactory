*.txt             表示忽略 所有 .txt 结尾的文件
/*.txt            表示忽略 根目录下 .txt 结尾的文件
dirt/             表示忽略 所有 dirt/目录下 所有文件
dirt/*.txt        表示忽略 所有 dirt/一级目录下 所有文件

!lib.txt          表示但lib.a除外

doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt
bin/            表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件
/bin            表示忽略根目录下的bin文件
debug/*.obj     表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj
**/foo          表示忽略/foo,a/foo,a/b/foo等
a/**/b          表示忽略a/b, a/x/b,a/x/y/b等
!/bin/run.sh    表示不忽略bin目录下的run.sh文件
config.php      表示忽略当前路径的 config.php 文件
/mtk/           表示过滤整个文件夹
/mtk/do.c       表示过滤某个具体文件

gitignore还可以指定要将哪些文件添加到版本管理中，如下：
!*.zip
!/mtk/one.txt

想象一个场景：假如我们只需要管理/mtk/目录中的one.txt文件，这个目录中的其他文件都不需要管理，那么.gitignore规则应写为：：
/mtk/*
!/mtk/one.txt

假设我们只有过滤规则，而没有添加规则，那么我们就需要把/mtk/目录下除了one.txt以外的所有文件都写出来！
注意上面的/mtk/*不能写为/mtk/，否则父目录被前面的规则排除掉了，one.txt文件虽然加了!过滤规则，也不会生效！

fd1/*           说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；
/fd1/*          说明：忽略根目录下的 /fd1/ 目录的全部内容；